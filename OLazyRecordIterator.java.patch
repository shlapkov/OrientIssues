Index: OLazyRecordIterator.java
===================================================================
--- OLazyRecordIterator.java	(revision 22113)
+++ OLazyRecordIterator.java	(working copy)
@@ -27,6 +27,8 @@
 import com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal;
 import com.orientechnologies.orient.core.id.ORecordId;
 import com.orientechnologies.orient.core.record.ORecord;
+import com.orientechnologies.orient.core.serialization.serializer.ONetworkThreadLocalSerializer;
+import com.orientechnologies.orient.core.serialization.serializer.record.ORecordSerializer;
 
 /**
  * Lazy implementation of Iterator that load the records only when accessed. It keep also track of changes to the source record
@@ -71,16 +73,31 @@
       return null;
 
     if (value instanceof ORecordId && autoConvert2Record && ODatabaseRecordThreadLocal.INSTANCE.isDefined()) {
-      try {
+      ORecordSerializer curSer = ONetworkThreadLocalSerializer.getNetworkSerializer();
+      try
+      {
+        if (curSer != null)
+        {
+          //no need to use network serializer
+          ONetworkThreadLocalSerializer.setNetworkSerializer(null);
+        }
         final ORecord rec = ((ORecordId) value).getRecord();
         if (underlying instanceof OLazyIterator<?>)
+        {
           ((OLazyIterator<OIdentifiable>) underlying).update(rec);
+        }
         value = rec;
-      } catch (Exception e) {
+      }
+      catch (Exception e)
+      {
         OLogManager.instance().error(this, "Error on iterating record collection", e);
         value = null;
       }
-
+      finally
+      {
+        if(curSer != null)
+          ONetworkThreadLocalSerializer.setNetworkSerializer(curSer);
+      }
     }
 
     return value;
